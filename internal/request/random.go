package request

import (
	"context"
	"errors"
	"fmt"
	tea "github.com/charmbracelet/bubbletea"
	"github.com/cloudflare/cloudflare-go"
	"github.com/provsalt/soramail/pkg/random"
	"time"
)

type CreateRandomAddressMsg struct {
	Err     error
	Address string
}

func CreateRandomAddressCmd(api *cloudflare.API, zone cloudflare.Zone, email string, random random.AddressProvider) tea.Cmd {
	return func() tea.Msg {
		return createRandomAddress(api, zone, email, random)
	}
}

func createRandomAddress(api *cloudflare.API, zone cloudflare.Zone, email string, random random.AddressProvider) tea.Msg {
	if api == nil {
		return CreateRandomAddressMsg{Err: errors.New("error: no cloudflare api used")}
	}
	// for now it seems like zone.Name is not editable which can serve as our domain name.
	address := random.RandomEmail(zone.Name)
	params := cloudflare.CreateEmailRoutingRuleParameters{
		Actions: []cloudflare.EmailRoutingRuleAction{
			{Type: "forward", Value: []string{email}},
		},
		Matchers: []cloudflare.EmailRoutingRuleMatcher{
			{Type: "literal", Field: "to", Value: address},
		},
		Name: fmt.Sprintf("Randomly generated by soramail on %s", time.Now().Format(time.DateTime)),
	}
	_, err := api.CreateEmailRoutingRule(context.Background(), cloudflare.ZoneIdentifier(zone.ID), params)
	if err != nil {
		return CreateRandomAddressMsg{Err: err}
	}
	return CreateRandomAddressMsg{
		Err:     nil,
		Address: address,
	}
}
